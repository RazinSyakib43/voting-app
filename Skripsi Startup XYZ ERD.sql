CREATE TYPE ordering_status_enum AS ENUM ('PENDING', 'PROCESSING', 'SHIPPED', 'DELIVERED', 'COMPLETED');
CREATE TYPE transaction_status_enum AS ENUM ('UNPAID', 'PAID', 'FAILED', 'CANCELLED');
CREATE TYPE kurir_enum AS ENUM ('JNE', 'JNT', 'GO-SEND', 'SHOPEE EXPRESS');

CREATE TABLE "ordering" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "date" date,
  "notes" varchar,
  "status" ordering_status_enum,
  "kurir" kurir_enum,
  "alamat" varchar,
  "invoice_url" varchar,
  "latitude" varchar,
  "longitude" varchar
);

CREATE TABLE "detail_ordering" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "id_consumer" integer,
  "id_ordering" integer,
  "id_fish" integer,
  "weight" integer
);

CREATE TABLE "transaction" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "id_external" integer,
  "id_consumer" integer,
  "id_ordering" integer,
  "dates_transaction" date,
  "dates_payed" date,
  "status" transaction_status_enum
);

CREATE TABLE "cart" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "id_consumer" integer,
  "id_fish" integer,
  "notes" varchar,
  "weight" integer
);

CREATE TABLE "fish" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "id_seller" integer,
  "id_weight" integer,
  "name" varchar,
  "description" varchar,
  "price" numeric(10, 2),
  "photo_url" varchar
);

CREATE TABLE "weight" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "weight" integer,
);

CREATE TABLE "seller" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" varchar,
  "email" varchar,
  "password" varchar,
  "role" varchar DEFAULT 'SELLER',
  "phone_number" varchar,
  "location" varchar,
  "address" varchar
);

CREATE TABLE "consumer" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" varchar,
  "email" varchar,
  "password" varchar,
  "role" varchar DEFAULT 'CONSUMER',
  "phone_number" varchar,
  "address" varchar
);

ALTER TABLE "fish" ADD FOREIGN KEY ("id_weight") REFERENCES "weight" ("id");
ALTER TABLE "fish" ADD FOREIGN KEY ("id_seller") REFERENCES "seller" ("id");

ALTER TABLE "cart" ADD FOREIGN KEY ("id_fish") REFERENCES "fish" ("id");
ALTER TABLE "cart" ADD FOREIGN KEY ("id_consumer") REFERENCES "consumer" ("id");

ALTER TABLE "detail_ordering" ADD FOREIGN KEY ("id_consumer") REFERENCES "consumer" ("id");
ALTER TABLE "detail_ordering" ADD FOREIGN KEY ("id_fish") REFERENCES "fish" ("id");
ALTER TABLE "detail_ordering" ADD FOREIGN KEY ("id_ordering") REFERENCES "ordering" ("id");

ALTER TABLE "transaction" ADD FOREIGN KEY ("id_consumer") REFERENCES "consumer" ("id");
ALTER TABLE "transaction" ADD FOREIGN KEY ("id_ordering") REFERENCES "ordering" ("id");